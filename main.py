# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt6 UI code generator 6.2.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

from cgitb import reset
from concurrent.futures import thread
from dialog import Ui_Dialog as Form
from alert import Ui_Alert as alrt

from PyQt6 import QtCore, QtGui, QtWidgets
import os, time
from pytube import YouTube
import convert as np
dir = os.getcwd()# + "\\Updates"
li_complete = []
li_update = []


class Ui_MainWindow(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        #self.extra = 0
        self.setupUi(QtWidgets.QMainWindow)
    def setupUi(self, MainWindow):
        self.i = 1
        self.maini = []
        self.mother = "false"
        self.setObjectName("MainWindow")
        self.resize(657, 423)
        self.setStyleSheet("background-color: rgb(54, 57, 63);\n"
"")
        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_2.sizePolicy().hasHeightForWidth())
        self.pushButton_2.setSizePolicy(sizePolicy)
        self.pushButton_2.setMinimumSize(QtCore.QSize(81, 31))
        self.pushButton_2.setMaximumSize(QtCore.QSize(150, 50))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("background-color: rgb(0, 200, 0);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.Download)
        self.gridLayout.addWidget(self.pushButton_2, 0, 0, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setMinimumSize(QtCore.QSize(81, 31))
        self.pushButton.setMaximumSize(QtCore.QSize(150, 50))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(0, 200, 0);")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.Resolution)
        self.gridLayout.addWidget(self.pushButton, 0, 1, 1, 1)
        self.input = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.input.sizePolicy().hasHeightForWidth())
        self.input.setSizePolicy(sizePolicy)
        self.input.setMinimumSize(QtCore.QSize(391, 31))
        self.input.setStyleSheet("color: rgb(255, 255, 255);\n"
"border: .5px solid black;\n"
"border-radius: 7px;\n"
"border-color: rgb(34, 34, 34);")
        self.input.setObjectName("input")
        self.gridLayout.addWidget(self.input, 0, 2, 1, 1)
        self.History = QtWidgets.QTabWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.History.setFont(font)
        self.History.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.ArrowCursor))
        self.History.setTabPosition(QtWidgets.QTabWidget.TabPosition.North)
        self.History.setTabShape(QtWidgets.QTabWidget.TabShape.Rounded)
        self.History.setMovable(True)
        self.History.setObjectName("History")
        self.prog = QtWidgets.QWidget()
        self.prog.setObjectName("prog")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.prog)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.scrollArea = QtWidgets.QScrollArea(self.prog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea.sizePolicy().hasHeightForWidth())
        self.scrollArea.setSizePolicy(sizePolicy)
        self.scrollArea.setMinimumSize(QtCore.QSize(551, 200))
        self.scrollArea.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.scrollArea.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        self.scrollArea.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContentsOnFirstShow)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, -165, 596, 443))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout.setObjectName("verticalLayout")
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_2.addWidget(self.scrollArea)
        icon = QtGui.QIcon.fromTheme("discord")
        self.History.addTab(self.prog, icon, "")
        self.old = QtWidgets.QWidget()
        self.old.setObjectName("old")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.old)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.scrollArea_2 = QtWidgets.QScrollArea(self.old)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_2.sizePolicy().hasHeightForWidth())
        self.scrollArea_2.setSizePolicy(sizePolicy)
        self.scrollArea_2.setMinimumSize(QtCore.QSize(551, 200))
        self.scrollArea_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.scrollArea_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        self.scrollArea_2.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContentsOnFirstShow)
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 586, 412))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_2)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        dat = open(dir + "\\history.dat", 'r')
        lines = dat.readlines()
        mul = 0
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(80)
        for i in reversed(lines):
                lsst = i.split("`")
                self.groupBox_5 = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_2)
                self.groupBox_5.setMinimumSize(QtCore.QSize(0, 94))
                self.groupBox_5.setMaximumHeight(154)
                self.groupBox_5.setObjectName("groupBox_5")
                self.groupBox_5.setStyleSheet(u"background-color: rgb(47, 49, 54);\n"
"border: 1px solid black;\n"
"border-color: rgb(41, 43, 47);\n"
"border-radius: 7px;")
                self.label_13 = QtWidgets.QLabel(self.groupBox_5)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.label_13.sizePolicy().hasHeightForWidth())
                self.label_13.setSizePolicy(sizePolicy)
                self.label_13.setFont(font)
                self.label_13.setTextFormat(QtCore.Qt.TextFormat.RichText)
                self.label_13.setWordWrap(True)
                self.label_13.setTextInteractionFlags(QtCore.Qt.TextInteractionFlag.LinksAccessibleByMouse|QtCore.Qt.TextInteractionFlag.TextSelectableByKeyboard|QtCore.Qt.TextInteractionFlag.TextSelectableByMouse)
                self.label_13.setObjectName("label_13")
                self.label_13.setStyleSheet(u"color: white;")
                self.label_14 = QtWidgets.QLabel(self.groupBox_5)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.label_14.sizePolicy().hasHeightForWidth())
                self.label_14.setSizePolicy(sizePolicy)
                self.label_14.setMinimumSize(QtCore.QSize(448, 22))
                self.label_14.setWordWrap(True)
                self.label_14.setTextInteractionFlags(QtCore.Qt.TextInteractionFlag.LinksAccessibleByMouse|QtCore.Qt.TextInteractionFlag.TextSelectableByKeyboard|QtCore.Qt.TextInteractionFlag.TextSelectableByMouse)
                self.label_14.setObjectName("label_14")
                self.label_14.setStyleSheet(u"color: white;")
                self.label_15 = QtWidgets.QLabel(self.groupBox_5)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.label_15.sizePolicy().hasHeightForWidth())
                self.label_15.setSizePolicy(sizePolicy)
                self.label_15.setMinimumSize(QtCore.QSize(94, 22))
                self.label_15.setWordWrap(True)
                self.label_15.setTextInteractionFlags(QtCore.Qt.TextInteractionFlag.LinksAccessibleByMouse|QtCore.Qt.TextInteractionFlag.TextSelectableByKeyboard|QtCore.Qt.TextInteractionFlag.TextSelectableByMouse)
                self.label_15.setObjectName("label_15")
                self.label_15.setStyleSheet(u"color: white;")
                self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBox_5)
                self.gridLayout_6.setObjectName("gridLayout_6")
                self.gridLayout_6.addWidget(self.label_13, 0, 0, 1, 2)
                self.gridLayout_6.addWidget(self.label_14, 1, 0, 1, 1)
                self.gridLayout_6.addWidget(self.label_15, 1, 1, 1, 1)

                
                mul = mul + 1
                self.label_13.setText(lsst[0])
                self.label_14.setText(lsst[1])
                self.label_15.setText("Resolution=" + lsst[2])

                
                self.verticalLayout_3.addWidget(self.groupBox_5)
        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_2)
        self.verticalLayout_4.addWidget(self.scrollArea_2)
        self.History.addTab(self.old, "")
        self.gridLayout.addWidget(self.History, 1, 0, 1, 3)
        self.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(self)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 657, 21))
        self.menubar.setObjectName("menubar")
        self.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(self)
        self.statusbar.setObjectName("statusbar")
        self.setStatusBar(self.statusbar)
        self.thread={}

        self.retranslateUi()
        self.History.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_2.setStatusTip(_translate("MainWindow", "Start Download"))
        self.pushButton_2.setText(_translate("MainWindow", "Download"))
        self.pushButton.setStatusTip(_translate("MainWindow", "Select Resolution"))
        self.pushButton.setText(_translate("MainWindow", "Resolution"))
        self.input.setStatusTip(_translate("MainWindow", "Enter url"))
        self.input.setText(_translate("MainWindow", "Paste URL here"))
        self.History.setStatusTip(_translate("MainWindow", "Tabs"))
        self.History.setTabText(self.History.indexOf(self.prog), _translate("MainWindow", "Progress"))
        self.History.setTabToolTip(self.History.indexOf(self.prog), _translate("MainWindow", "Current Progress"))
        self.History.setTabText(self.History.indexOf(self.old), _translate("MainWindow", "History"))
        self.History.setTabToolTip(self.History.indexOf(self.old), _translate("MainWindow", "All Downloads"))
    def Resolution(self):
        dialog = QtWidgets.QDialog()
        dialog.ui = Form()
        dialog.ui.setupUi(dialog)
        dialog.exec()
    def addWidgit(self, title, res, url):
        self.groupBox = QtWidgets.QGroupBox(self.scrollAreaWidgetContents)
        self.groupBox.setMinimumSize(QtCore.QSize(0, 114))
        self.groupBox.setMaximumHeight(154)
        self.groupBox.setObjectName("groupBox" + str(self.i))
        self.groupBox.setStyleSheet(u"background-color: rgb(47, 49, 54);\n"
"border: 1px solid black;\n"
"border-color: rgb(41, 43, 47);\n"
"border-radius: 7px;")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy)
        self.label_6.setMinimumSize(QtCore.QSize(94, 22))
        self.label_6.setWordWrap(True)
        self.label_6.setTextInteractionFlags(QtCore.Qt.TextInteractionFlag.LinksAccessibleByMouse|QtCore.Qt.TextInteractionFlag.TextSelectableByKeyboard|QtCore.Qt.TextInteractionFlag.TextSelectableByMouse)
        self.label_6.setObjectName("label_6")
        self.label_6.setStyleSheet(u"color: white;")
        self.gridLayout_2.addWidget(self.label_6, 1, 1, 1, 2)
        self.cross = QtWidgets.QPushButton(self.groupBox)
        self.cross.setObjectName(u"Cancel")
        crossSizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        crossSizePolicy.setHorizontalStretch(0)
        crossSizePolicy.setVerticalStretch(0)
        crossSizePolicy.setHeightForWidth(self.cross.sizePolicy().hasHeightForWidth())
        self.cross.setSizePolicy(crossSizePolicy)
        self.cross.setMinimumSize(QtCore.QSize(20, 20))
        self.cross.setMaximumSize(QtCore.QSize(20, 20))
        self.cross.setToolTip('Button disabled till Download completion')
        self.cross.setStatusTip('Delete completed Download widget')
        self.cross.setStyleSheet(u"color:red;   \n"
"font-size:15px;\n"
"font-weight:bold;\n"
"position: absolute;\n"
"right: 50%;\n"
"top: 50%;\n"
"background-color: qradialgradient(spread:reflect, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5, stop:0 rgba(184, 187, 195, 255), stop:1 rgba(255, 255, 255, 255));\n"
"opacity: 1;\n"
"font-family: Helvetica, sans-serif;\n"
)
        self.cross.setText('x')
        self.cross.clicked.connect(self.delWidgit)
        self.cross.setEnabled(False)
        self.gridLayout_2.addWidget(self.cross, 0, 2, QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTop)
        self.label = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setMinimumSize(QtCore.QSize(448, 22))
        self.label.setWordWrap(True)
        self.label.setTextInteractionFlags(QtCore.Qt.TextInteractionFlag.LinksAccessibleByMouse|QtCore.Qt.TextInteractionFlag.TextSelectableByKeyboard|QtCore.Qt.TextInteractionFlag.TextSelectableByMouse)
        self.label.setObjectName("label")
        self.label.setStyleSheet(u"color: white;")
        self.gridLayout_2.addWidget(self.label, 1, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.label_5.setSizePolicy(sizePolicy)
        self.label_5.setTextFormat(QtCore.Qt.TextFormat.RichText)
        self.label_5.setWordWrap(True)
        self.label_5.setTextInteractionFlags(QtCore.Qt.TextInteractionFlag.LinksAccessibleByMouse|QtCore.Qt.TextInteractionFlag.TextSelectableByKeyboard|QtCore.Qt.TextInteractionFlag.TextSelectableByMouse)
        self.label_5.setObjectName("label_5")
        self.label_5.setStyleSheet(u"color: white;")
        self.gridLayout_2.addWidget(self.label_5, 0, 0, 1, 2)
        self.gridLayout_2.setColumnStretch(1,5)
        self.progressBar = QtWidgets.QProgressBar(self.groupBox)
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar" + str(self.i))
        self.progressBar.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.gridLayout_2.addWidget(self.progressBar, 2, 0, 1, 3)

        self.label_6.setText(title)
        self.label.setText(url)
        self.label_5.setText(res)
        
        self.verticalLayout.addWidget(self.groupBox)
        #self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        #self.verticalLayout.addWidget(self.scrollArea)
    def delWidgit(self):
            try:
                crossButton = self.sender()
                self.mother = crossButton.parent()
                string = self.mother.objectName()
                ind = string[-1]
                self.thread[int(ind)].exit()
                self.maini.append(int(ind))
                self.mother.deleteLater()

            except Exception as e:
                    print(e)
                    print('exception')
    def Download(self):
        global yt
        global url
        global a
        a = self.input.text()
        with open(dir + "\\val.dat", 'r') as f:
            line = f.readlines()[0]
            n = line.split('`')
            r = n[1]
            c = n[0]
        try:
            yt = YouTube(a)
            tit = yt.title
            file = open(dir + "\\history.dat", "a")
            file.write(tit + "`" + a + "`" + r + "`" + c + "\n")
            file.close()
            global num,res
            num = int(c)
            res = r
            self.addWidgit(r, tit, a)
            self.thread[self.i] = ThreadClass(parent=None,index=self.i)
            self.thread[self.i].start()
            self.thread[self.i].any_signal.connect(self.my_function)
            self.i = self.i + 1
        except Exception as e:
            print("\a\a")
            print(e)
            self.Alert()
    def Alert(self):
        alert = QtWidgets.QDialog()
        alert.ui = alrt()
        alert.ui.setupUi(alert)
        alert.exec()
    def my_function(self,counter):
        cnt=counter
        indx = self.sender().index
        print(indx)
        if indx not in self.maini:
            group = self.scrollAreaWidgetContents.findChild(QtWidgets.QGroupBox,"groupBox" + str(indx))
            self.child  = group.findChild(QtWidgets.QProgressBar)#, "progressBar"+ str(index+ self.extra))
            if cnt != 0:
                self.child.setValue(cnt)
            if indx in li_update:
                self.labl  = group.findChild(QtWidgets.QLabel,"label_6")
                self.labl.setText('Downloading Audio and Combining with Video')
                li_update.remove(indx)
            if indx in li_complete:
                self.labl  = group.findChild(QtWidgets.QLabel,"label_6")
                self.labl.setText('Download Completed. Press Cross to Delete Widget')
                self.crossbut = group.findChild(QtWidgets.QPushButton)
                self.crossbut.setToolTip('Button Enabled')
                self.crossbut.setEnabled(True)
                li_complete.remove(indx)

class ThreadClass(QtCore.QThread):
	
	any_signal = QtCore.pyqtSignal(int)
	def __init__(self, parent=None,index=0):
		super(ThreadClass, self).__init__(parent)
		self.index=index
		self.is_running = True
	def run(self):
		print('Starting thread...',self.index)
		yt = YouTube(a, on_progress_callback=self.progress_func)
		dtitle = yt.title
		char = "|/<>?,:\'\"\\}{][+_-=)(*&%$#@!~`"
		for c in char:
			dtitle = dtitle.replace(c , "")
		yt = yt.streams
		global updte#, complete
		#complete = False
		updte = False
		outpath =  dir + "\\"+ dtitle
		for i in range(10):
			if os.path.isdir(outpath):
				if i==0:
					continue
				outpath = dir + "\\"+ dtitle + str(i)
				foldernum = i
			else:
				if i == 0:
					foldernum = i
				break

		if num == 3:
			stream = yt.filter(res=res, progressive=True).first()
			if stream:
				stream.download(output_path= dir + "\\Download", skip_existing=False)
				self.any_signal.emit(0)

			else:
				stream = yt.filter(mime_type="video/mp4" ,res=res).first()
				stream.download(output_path= outpath,filename="vid.mp4", skip_existing=False)           
				li_update.append(self.index)
				stream = yt.get_by_itag(251)
				stream.download(output_path= outpath, filename = "aud.webm", skip_existing=False)
				li_complete.append(self.index)
				direct = False
				while direct == False:
					if dir == os.getcwd():
						np.combine_audio(dtitle, foldernum)
						self.any_signal.emit(0)
						direct = True
					time.sleep(4)
		elif num == 1:
			stream = yt.get_by_itag(251)
			stream.download(output_path= dir +"\\Download", skip_existing=False)
			li_complete.append(self.index)
			self.any_signal.emit(0)
		elif num == 5:
			stream = yt.order_by('resolution').desc().first()
			if "res=\"720p\"" in str(stream):
				stream = yt.get_highest_resolution()
				stream.download(output_path= dir +"\\Download", skip_existing=False)
				self.any_signal.emit(0)
			else:
				if "vp9" in str(stream):
					stream.download(output_path= outpath, filename="vid.webm" , skip_existing=False)
				else:
					stream.download(output_path= outpath, filename="vid.mp4" , skip_existing=False)
				li_update.append(self.index)
				stream = yt.get_by_itag(251)
				stream.download(output_path= outpath, filename = "aud.webm", skip_existing=False)
				li_complete.append(self.index)
				print(outpath+str(foldernum)+ '\n')
				direct = False
				while direct == False:
					if dir == os.getcwd():
						np.combine_audio(dtitle, foldernum)
						self.any_signal.emit(0)
						direct = True
					time.sleep(4)
	def progress_func(self, stream, chunk, bytes_remaining):
		size = stream.filesize
		self.progress = (float(abs(bytes_remaining-size)/size))*float(100)
		self.any_signal.emit(int(self.progress))
	def stop(self):
		self.is_running = False
		print('Stopping thread...',self.index)
		self.terminate()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    app.setStyle('fusion')
    MainWindow = Ui_MainWindow()
    MainWindow.show()
    sys.exit(app.exec())
